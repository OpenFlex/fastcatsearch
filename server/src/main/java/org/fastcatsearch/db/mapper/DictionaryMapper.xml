<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
Derby SQL 문법에 따른다.
 -->
<mapper namespace="org.fastcatsearch.db.mapper.DictionaryMapper">

	<update id="createTable" parameterType="map" >
		create table ${table} (
			id bigint not null generated always as identity,
			<if test="columnSettings != null">
				<foreach item="column" index="index" collection="columnSettings">
					${name} ${type},
				</foreach>
			</if>
			primary key (id)
		)
	</update>
	
	<update id="createIndex" parameterType="map" >
		create index ${column}_index on ${table}(${column})
	</update>
	
	<select id="validateTable" parameterType="map" resultType="map">
		select id
		<if test="columnSettings != null">
			<foreach item="column" index="index" collection="columnSettings">
			${name}
			</foreach>
		</if>
		from ${table} 
		fetch first 1 rows only
	</select>

	<update id="dropTable" parameterType="map">
		drop table ${table}
	</update>

	<select id="getEntry" parameterType="int" resultType="map">
		select *
		from ${table} where id = #{id}
	</select>

	<select id="getEntryList" parameterType="map" resultType="map">
		<if test="start &gt; 0">
			select *
			from (
			select row_number() over() as rownum, ${table}.* from ${table}
			<if test="search != null and columns != null">
				<where> 
					<foreach item="column" index="index" collection="columns">
					or ${column} like #{search}
					</foreach>
				</where>
			</if>
			order by id desc
			) as tmp where rownum &gt;= #{start} and rownum &lt;= #{end}
		</if>
	</select>
	
	<select id="getCount" parameterType="map" resultType="int">
		select count(*)
		from ${table}
		<if test="search != null and columns != null">
			<where> 
				<foreach item="column" index="index" collection="columns">
				or ${column} like #{search}
				</foreach>
			</where>
		</if>
	</select>
	
	<insert id="putEntry" parameterType="map" useGeneratedKeys="true" >
		insert into ${table}
		<if test="columns != null">
			<foreach item="column" index="index" collection="columns" open="(" separator="," close=")" > 
			${column}
			</foreach>
		</if>
		values
		<if test="values != null">
			<foreach item="value" index="index" collection="values" open="(" separator="," close=")" > 
			#{value}
			</foreach>
		</if>
		
	</insert>
	
	<update id="updateEntry" parameterType="map">
		update ${table}
		<if test="keyValueList != null">
			<foreach item="keyValue" index="index" collection="keyValueList" separator=","> 
			${keyValue.key} = #{keyValue.value}
			</foreach>
		</if>
		where id = #{id}
	</update>
	
	<delete id="deleteEntry" parameterType="map">
		delete from ${table} 
		where id = #{id}
	</delete>
</mapper>